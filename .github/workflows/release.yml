name: Release Extension

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tag')
    steps:
      - uses: actions/checkout@v4

      - name: Use Node Version 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true' || steps.npm-cache-dir.outputs.cache-hit != 'true'

      - name: Build extension
        run: npm run build

      - uses: lannonbr/vsce-action@3.0.0
        with:
          args: "publish -p $VSCE_TOKEN"
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
